Metadata-Version: 1.1
Name: django-transverbis-blog
Version: 0.1
Summary: A simple Django app used for the Transverbis website.
Home-page: https://www.transverbis.ro/
Author: Filip Gadiuta
Author-email: filip.gadiuta@gmail.com
License: MIT License
Description: Django Transverbis blog
        =======================
        
        
        This is a simple Django app used for the Transverbis.ro website.
        It is inspired from the djangogirls.org tutorial.
        The HTML templates use  Bootstrap.
        
        Quick start for a local installation on Ubuntu 14.04 LTS
        --------------------------------------------------------
        1. Create a local Django installation::
        
            mkdir myblog
            cd myblog
            virtualenv venv
            source venv/bin/activate
            pip install Django
            django-admin.py startproject myblog .
            python manage.py migrate
            python manage.py createsuperuser
        
        
        2. Install django-transverbis-blog::
        
            pip install git+git://github.com/filipok/django-transverbis-blog.git
        
        or, if you create a tar.gz package with ``python setupy.py sdist``::
        
            pip install django-transverbis-blog-x.x.tar.gz
        
        3. Add ``djtransverbisblog`` to your INSTALLED_APPS settings::
        
            INSTALLED_APPS = [
                ...
                'djtransverbisblog',
            ]
        
        
        4. Add ``djtransverbisblog.context_proc.base_variables`` to your context_processors setting like this::
        
            TEMPLATES = [
                {
                    'BACKEND': 'django.template.backends.django.DjangoTemplates',
                    'DIRS': [],
                    'APP_DIRS': True,
                    'OPTIONS': {
                        'context_processors': [
                            'django.template.context_processors.debug',
                            'django.template.context_processors.request',
                            'django.contrib.auth.context_processors.auth',
                            'django.contrib.messages.context_processors.messages',
                            'djtransverbisblog.context_proc.base_variables',
                        ],
                    },
                },
            ]
        
        
        5. Include the djtransverbisblog URLconf in your project ``urls.py`` like this in order to have your blog at the address http://example.com/blog/ ::
        
            url(r'^blog/', include('djtransverbisblog.urls')),
        
        or like this for the root page of http://example.com/ ::
        
            url(r'', include('djtransverbisblog.urls')),
        
        and also::
        
            url(r'^accounts/login/$', login, name='login'),
            url(r'^accounts/logout/$', logout, {'next_page': '/'}, name='logout'),
        
        Note: the login part is currently not used, but you can add a login button on your page.
        
        Also ensure you have the following imports in your ``urls.py``::
        
            from django.conf.urls import include, url
            from django.contrib import admin
            from django.contrib.auth.views import login, logout
        
        Then add::
        
            LOGIN_REDIRECT_URL = '/'
        
        to your ``settings.py`` file.
        
        6. Add your website name and slogan to ``settings.py``::
        
            WEBSITE_NAME = 'MyWebsite'
            WEBSITE_SLOGAN = 'MySlogan'
        
        7. Populate the database::
        
            python manage.py makemigrations djtransverbisblog
            python manage.py migrate
        
        
        8. Start the development server::
        
            python manage.py runserver
        
        and visit http://127.0.0.1:8000/admin/ to login with your superuser account and start populating the blog. You can use the default Django admin interface or you can use the custom admin interface available from the homepage at http://127.0.0.1:8000/ (without ``admin/``).
        
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
